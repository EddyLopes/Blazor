@page "/SystemCodesDetails"
@attribute [StreamRendering]
@attribute [Authorize]

<PageTitle>System Codes Details List</PageTitle>

<h1>System Codes List</h1>

@if (SystemCodesDetailsList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudCard Elevation="28">
        <MudCardHeader>
            <MudCardContent>
                <MudText Typo="Typo.h6">Add / Edit System Codes</MudText>
                <div class="d-flex justify-content-end">
                    <MudButton Href="/AddSystemCodeDetail" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add">
                        Add System Code
                    </MudButton>
                </div>
            </MudCardContent>
        </MudCardHeader>
        <MudCardContent>
            @* <p><a href="/AddSystemCode" class="btn btn-primary float-end">Add New System Code</a></p> *@
            <MudDataGrid Items="@SystemCodesDetailsList" Filterable="false" SortMode="@SortMode.None" Groupable="false">
                <Columns>
                    <PropertyColumn Property="x => x.Code" />
                    <PropertyColumn Property="x => x.Description" />
                    <PropertyColumn Property="x => x.SystemCode.Code" Title="Parent Code" />
                    <PropertyColumn Property="x => x.OrderNo" Title="Order No" />
                    <PropertyColumn Property="x => x.CreatedBy.FullName" Title="Created By" />
                    <PropertyColumn Property="x => x.CreatedOn" Title="Created On" />
                    <TemplateColumn CellClass="d-flex justify-end">
                        <CellTemplate>
                            <MudStack Row>
                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Primary">Edit</MudButton>
                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Delete</MudButton>
                            </MudStack>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
            </MudDataGrid>
        </MudCardContent>
    </MudCard>
}

@code {
    public string UserId { get; set; }

    public List<SystemCodeDetail>? SystemCodesDetailsList { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    [Inject]
    public UserManager<ApplicationUser> userManager { get; set; }

    [Inject]
    public ISystemCodeDetailServices SystemCodeDetailServices { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationState).User;
        if (user.Identity.IsAuthenticated)
        {
            var currentUser = await userManager.GetUserAsync(user);
            UserId = currentUser.Id;
        }

        SystemCodesDetailsList = await SystemCodeDetailServices.GetSystemCodeDetailsAsync();
    }
}

