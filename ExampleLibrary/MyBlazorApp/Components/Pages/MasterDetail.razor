@page "/master-detail"
@rendermode InteractiveServer

@using MyBlazorApp.Model

<h3>Pedidos</h3>
<ul>
    @foreach (var order in Orders)
    {
        <li @onclick="() => SelectOrder(order)" style="cursor: pointer; list-style-type: none; margin: 5px 0; padding: 5px; border: 1px solid #ccc;">
            @order.OrderName
        </li>
    }
</ul>

@if (SelectedOrder != null)
{
    <h3>Itens do Pedido: @SelectedOrder.OrderName</h3>
    <ul>
        @foreach (var item in SelectedOrder.Items)
        {
            <li>@item.ItemName - Quantidade: @item.Quantity</li>
        }
    </ul>
    <p>@message</p>  @* Exibe uma mensagem quando o pedido é selecionado *@
}
else
{
    <p>Nenhum pedido selecionado.</p>
}

@code {
    private List<Order> Orders = new List<Order>();
    private Order? SelectedOrder;
    private string message = string.Empty;  // Variável para exibir uma mensagem na tela

    protected override void OnInitialized()
    {
        // Dados de exemplo
        Orders = new List<Order>
        {
            new Order
            {
                OrderId = 1,
                OrderName = "Pedido 1",
                Items = new List<OrderItem>
                {
                    new OrderItem { OrderItemId = 1, ItemName = "Item A", Quantity = 2 },
                    new OrderItem { OrderItemId = 2, ItemName = "Item B", Quantity = 1 }
                }
            },
            new Order
            {
                OrderId = 2,
                OrderName = "Pedido 2",
                Items = new List<OrderItem>
                {
                    new OrderItem { OrderItemId = 3, ItemName = "Item C", Quantity = 5 },
                    new OrderItem { OrderItemId = 4, ItemName = "Item D", Quantity = 3 }
                }
            }
        };
    }

    private void SelectOrder(Order order)
    {
        SelectedOrder = order;
        message = $"Pedido '{order.OrderName}' selecionado!";
        Console.WriteLine(message);  // Apenas para confirmar no console que o método foi chamado
        StateHasChanged();  // Garante que a UI será re-renderizada
    }
}