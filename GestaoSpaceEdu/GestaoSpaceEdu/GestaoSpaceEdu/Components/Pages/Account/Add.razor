@page "/account/add"
@rendermode InteractiveServer

<PageTitle>
    Conta - Cadastro
</PageTitle>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-4 flex-grow-1">Cadastrar Conta</h4>
            </div>
            <div class="card-body">
                <EditForm Model="Account" OnValidSubmit="Submit" FormName="formAccount">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="description" class="form-label">Descrição/Nome</label>
                                <InputText @bind-Value="Account.Description" class="form-control" id="description" autocomplete="off" />
                                <ValidationMessage For="() => Account.Description" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="balance" class="form-label">Saldo Inicial</label>
                                <InputNumber @bind-Value="Account.Balance" class="form-control" id="balance" autocomplete="off" />
                                <ValidationMessage For="() => Account.Balance" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="balanceDate" class="form-label">Data de Início</label>
                                <InputDate @bind-Value="Account.BalanceDate" class="form-control" id="balanceDate" autocomplete="off" />
                                <ValidationMessage For="() => Account.BalanceDate" class="text-danger" />
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="d-flex justify-content-between">
                            <a href="/Account/List" class="btn btn-light">Voltar</a>
                            <button type="submit" class="btn btn-primary">Salvar</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    public Account Account { get; set; } = new() { BalanceDate = DateTimeOffset.Now};
    private Company? Company;

    [Inject]
    public IJSRuntime JS { get; set; } = null!;

    [Inject]
    public IAccountRepository AccountRepository { get; set; } = null!;

    [Inject]
    public ILocalStorageService LocalStorage { get; set; } = null!;


    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        Company = await LocalStorage.GetItemAsync<Company>(AppConstants.LocalStorageCompany);
    }

    private async Task Submit()
    {
        Account.CreatedAt = DateTimeOffset.Now;
        Account.CompanyId = Company!.Id;
        await AccountRepository.AddAsync(Account);

        await JS.InvokeVoidAsync("alert", "Registro salvo com sucesso!");

        NavigationManager.NavigateTo("/Account/List");

    }
}

